@page "/quickGrid"
@using GridTest.Shared.Models;
@using Microsoft.AspNetCore.Components.QuickGrid

<div class="content-container quickgrid-page">
    <p>
        <a href="/">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z" />
            </svg>
        </a>
        <span>QuickGrid</span>
    </p>
    <div class="content">
        <QuickGrid Items="@people" Class="quickgridTable" Pagination="@pagination">
            <PropertyColumn Title="GUID" Property="@(p => p.Id)" Sortable="true"/>
            <PropertyColumn Title="이름" Property="@(p => p.Name)" Sortable="true" />
            <PropertyColumn Title="생일" Property="@(p => p.BirthDate.ToString("yyyy-M-dd"))" Sortable="true" />
        </QuickGrid>
        <div class="pagination-wrapper">
            <div class="pagination-pagesize">
                <span>Items per page:</span>
                <select @bind="@pagination.ItemsPerPage">
                    @foreach(var i in new List<int>{ 5, 10, 20, 30, 40, 50 })
                    {
                        <option value="@i">@i</option>
                    }
                </select>
            </div>
            <Paginator Value="@pagination" />
        </div>
    </div>
</div>

@code {
    PaginationState pagination = new PaginationState { ItemsPerPage = 5 };
    IQueryable<Person> people = DataModel.GetPeople().AsQueryable();
}
